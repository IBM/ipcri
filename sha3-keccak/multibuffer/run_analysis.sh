#!/bin/bash

# SPDX-License-Identifier: BSD-2-Clause
#
# Copyright 2024-2025 IBM Corp. All rights reserved
# Authored by Nimet Ozkan <nozkan@linux.ibm.com>
#

FILES="main.c src/keccak.c src/util.c src/bench.c src/sha3-permutation.c"

CLANG_OUT="clang_analysis.txt"
GCC_OUT="gcc_analysis.txt"
VALGRIND_OUT="valgrind_analysis.txt"

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' 

echo "Running Clang Static Analyzer..."
clang --analyze $FILES > $CLANG_OUT 2>&1

echo "Running GCC with -fanalyzer..."
gcc -fanalyzer -Wall -Wextra -o keccak $FILES > $GCC_OUT 2>&1

echo "Running Valgrind..."
valgrind --track-origins=yes --leak-check=full ./keccak > $VALGRIND_OUT 2>&1

getout() {
    local out="$1"
    local tool="$2"
    if [[ -s $out ]]; then
        if [[ "$tool" == "Valgrind" ]]; then
            # Check for "ERROR SUMMARY: 0 errors from 0 contexts" in the output
            if grep -q "ERROR SUMMARY: 0 errors from 0 contexts" $out; then
                echo -e "${GREEN}Valgrind: NO errors detected.${NC}"
            else
                echo -e "${YELLOW}Valgrind produced output:${NC}"
                cat $out
            fi
        else
            echo -e "${RED}$tool error detected:${NC}"
            cat $out
        fi
    else
        echo -e "${GREEN}NO output generated by $tool - no error detected.${NC}"
    fi
}

getout $CLANG_OUT "Clang Static Analyzer"
getout $GCC_OUT "GCC -fanalyzer"
getout $VALGRIND_OUT "Valgrind"

rm -f $CLANG_OUT $GCC_OUT $VALGRIND_OUT
find . -type f -name "*.plist" -delete
